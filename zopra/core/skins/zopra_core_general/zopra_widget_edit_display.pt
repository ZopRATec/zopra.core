<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
         i18n:domain="zopra">

<body>
<tal:comment tal:replace="nothing">
    widgets for edit and create forms
</tal:comment>

<metal:widget_selector define-macro="widget_selector">
    <metal:block metal:use-macro="python:path('here/zopra_widget_edit_display/macros/widget_'+attr_type)" />
</metal:widget_selector>

<metal:widget_label define-macro="widget_label">
    <tal:block tal:define="cur_field field|nothing"
               tal:condition="python: cur_field">
        <label tal:attributes="for attr_name">
            <span i18n:translate="" tal:replace="python: cur_field['LABEL']"></span>
            <span class="fieldRequired"
                  title="Required"
                     i18n:attributes="title"
                     tal:define="isreq python: attr_name in required;"
                     tal:condition="isreq">
                *
            </span>
        </label>
        <div class="formHelp"
                 tal:content="helpTexts/?attr_name |nothing">
            Hinweistext
        </div>
        <div tal:condition="python: here.doesTranslations(table) and entry.get('hastranslation') and entry.get('language') == here.lang_default and (attr_type == 'string' or attr_type == 'memo')"
             class="formHelp"
             i18n:translate="zopra_widget_remember_translation">
            Please consider updating the translated entry as well.
        </div>
        <div tal:condition="error" tal:content="error" class="fieldErrorBox" i18n:translate="">
            Validation error output
        </div>
    </tal:block>
</metal:widget_label>

<metal:widget_string define-macro="widget_string">
    <metal:block metal:use-macro="python:path('here/zopra_widget_edit_display/macros/widget_label')" />
    <tal:block tal:define="urllookup python:attr_name.startswith('url') or attr_name.startswith('image_')">
        <input type="text"
                 tal:attributes="value attr_value; name attr_name; id attr_name"
        />
    </tal:block>
</metal:widget_string>

<metal:widget_int define-macro="widget_int">
    <metal:block metal:use-macro="python:path('here/zopra_widget_edit_display/macros/widget_label')" />
    <input type="text"
           class="numberinput"
             tal:attributes="value attr_value; name attr_name; id attr_name"
    />
</metal:widget_int>

<metal:widget_float define-macro="widget_float">
    <metal:block metal:use-macro="python:path('here/zopra_widget_edit_display/macros/widget_label')" />
    <input type="text"
           class="numberinput"
             tal:attributes="value python: ('%s' % attr_value).replace('.', ',');
            name attr_name; id attr_name"
    />
</metal:widget_float>

<metal:widget_currency define-macro="widget_currency">
    <metal:block metal:use-macro="python:path('here/zopra_widget_edit_display/macros/widget_label')" />
    <input type="text"
           class="numberinput"
             tal:attributes="value python: context.prepare_zopra_currency_value(attr_value);
            name attr_name; id attr_name"
    />
</metal:widget_currency>

<metal:widget_date define-macro="widget_date">
    <metal:block metal:use-macro="python:path('here/zopra_widget_edit_display/macros/widget_label')" />
    <input type="text"
           class="numberinput"
             tal:attributes="value attr_value; name attr_name; id attr_name"
    />
</metal:widget_date>

<metal:widget_bool define-macro="widget_bool">
    <input type="hidden" name="zopra_attr_present:list" tal:attributes="value attr_name" />
    <div class="checkboxes-group">
        <input type="checkbox"
               class="checkbox"
               value="1"
               tal:attributes="checked python:bool(attr_value) and attr_value != '0';
                               name attr_name;
                               id attr_name"
        />
        <div tal:condition="error" tal:content="error" class="fieldErrorBox" i18n:translate="">
            Validation error output
        </div>
        <label tal:attributes="for attr_name" tal:content="python: field['LABEL']" i18n:translate="">
            Attribute Name
        </label>
        <div class="formHelp"
                 tal:content="helpTexts/?attr_name |nothing">
            Helptext
        </div>
    </div>
</metal:widget_bool>

<metal:widget_memo define-macro="widget_memo">
    <metal:block metal:use-macro="python:path('here/zopra_widget_edit_display/macros/widget_label')" />
    <div data-sync data-has-reveal="true">
        <a class="expand" tal:attributes="data-open string:reveal_${attr_name}"><span class="show-for-sr" i18n:translate="zopra_widget_modal">Click here for a modal text input panel</span></a>
        <textarea cols="50" rows="5"
                 tal:attributes="name attr_name; id attr_name; data-sync-with string:#clone_${attr_name}"
                 tal:content="structure attr_value">value</textarea>
        <div class="reveal large" tal:attributes="id string:reveal_${attr_name}" data-reveal>
            <textarea cols="50" rows="20"
                     tal:attributes="id string:clone_${attr_name}; data-sync-with string:#${attr_name}"
                     tal:content="structure attr_value">value</textarea>
            <button class="close-button" data-close aria-label="Close modal" type="button">
            </button>
        </div>
    </div>
</metal:widget_memo>

<metal:widget_singlelist define-macro="widget_singlelist">
    <metal:block metal:use-macro="python:path('here/zopra_widget_edit_display/macros/widget_label')" />
    <select tal:define="lobj python:here.listHandler.getList(table, attr_name);
                        entries python:lobj.getEntries(lang=lang);
                        do_sort attr_sort|nothing;
                        entries python: do_sort and here.sortListEntriesForDisplay(table, attr_name, entries) or entries;"
            tal:attributes="name attr_name; id attr_name;"
            class="single">
        <option value="" i18n:translate="zopra_widget_choose">-choose-</option>
        <tal:block tal:repeat="entry entries">
            <tal:block condition="entry/value">
                <option tal:attributes="value python: unicode(entry['autoid']); selected python:unicode(entry['autoid']) == unicode(attr_value);"
                         tal:content="python:entry['value']">
                    value
                </option>
            </tal:block>
        </tal:block>
    </select>
</metal:widget_singlelist>

<metal:widget_multilist define-macro="widget_multilist">
    <metal:block metal:use-macro="python:path('here/zopra_widget_edit_display/macros/widget_label')" />
    <tal:block tal:define="lobj python:here.listHandler.getList(table, attr_name);
            entries python:lobj.getEntries(lang=lang);
            do_sort attr_sort|nothing;
            entries python: do_sort and here.sortListEntriesForDisplay(table, attr_name, entries) or entries;
            notes attr_notes_override|nocall: lobj/notes;
            tmp_store python: {};">
        <input type="hidden" name="zopra_attr_present:list" tal:attributes="value attr_name" />
        <select multiple="multiple"
                class="multi"
                data-close-on-select="false"
                tal:attributes="name python:attr_name+':list'; id attr_name">
            <tal:block tal:repeat="entry entries">
                <tal:block condition="entry/value">
                    <option tal:define="bla python: tmp_store.update([(entry['autoid'], entry['value'])])"
                             tal:attributes="value python: unicode(entry['autoid']);
                                             selected python:unicode(entry['autoid']) in [unicode(val) for val in attr_value];
                                             title python: entry['value']"
                             tal:content="python: entry['value']">
                        value
                    </option>
                </tal:block>
            </tal:block>
        </select>
        <div class="zopra-notes" tal:condition="notes">
            <div tal:define="labelstr python: lobj.getNoteslabel() or isinstance(notes, bool) and here.translate('Details', domain='zopra') or here.listHandler[notes].getLabel()"
                 tal:condition="attr_value"
                 class="zopra-notesheader">
                <span tal:content="labelstr">Label</span>
                <span i18n:translate="zopra_for">for</span><span>:</span>
            </div>
            <tal:block tal:repeat="selected attr_value">
                <div class="row" tal:condition="python: selected and tmp_store.get(int(selected))" class="zopra_notesbody">
                    <div class="column small-12 medium-4">
                        <label tal:attributes="for python: attr_name + u'notes' + unicode(selected)">
                            <a tal:define="href python: lobj.isTableReference() and lobj.getManager().absolute_url() + '/zopra_table_show_form?table=%s&autoid=%s' % (lobj.foreign, selected) or nothing"
                               tal:attributes="href href; target python:href and '_blank' or nothing"
                               tal:omit-tag="not: href"
                               tal:content="python: tmp_store.get(int(selected), '')"
                               class="auto-link">Value</a>
                        </label>
                    </div>
                    <div tal:define="notesname python: attr_name + u'notes' + unicode(selected);
                                     val python: attr_notes.get(notesname);"
                         class="column small-12 medium-8">
                        <tal:block tal:condition="python: isinstance(notes, bool)">
                            <input type="text" tal:attributes="name notesname;
                                                               id notesname;
                                                               value python: val and unicode(val) or '';">
                        </tal:block>
                        <tal:block tal:condition="python: isinstance(notes, (unicode, str))">
                            <select tal:define="lobj2 python:here.listHandler[notes];
                                                entries2 python:lobj2.getEntries();"
                                    tal:attributes="name notesname; id notesname">
                                <option value="NULL" i18n:translate="zopra_widget_choose">-choose-</option>
                                <tal:block tal:repeat="entry2 entries2">
                                    <tal:block condition="entry2/value">
                                        <option tal:attributes="value python: unicode(entry2['autoid']); selected python:unicode(entry2['autoid']) == unicode(val);"
                                                tal:content="python:entry2['value']">
                                            value
                                        </option>
                                    </tal:block>
                                </tal:block>
                            </select>
                        </tal:block>
                    </div>
                </div>
            </tal:block>
        </div>
    </tal:block>
</metal:widget_multilist>

<metal:widget_hierarchylist define-macro="widget_hierarchylist">
<tal:comment tal:replace="nothing">
- this only allows selection of one node (any node on any level, but only one), value is always only one hidden field
-> use GenericManager.getHierarchyListConfig(table, attribute) for the config and allow different settings
</tal:comment>
    <metal:block metal:use-macro="python:path('here/zopra_widget_edit_display/macros/widget_label')" />
    <tal:block tal:define="lobj python:here.listHandler.getList(table, attr_name);
            entries python:lobj.getEntries();
            do_sort attr_sort|nothing;
            entries python: do_sort and here.sortListEntriesForDisplay(table, attr_name, entries) or entries;
            tmp_store python: {};
            global parent python:0;
            global level python:0;">
        <script type="text/javascript" tal:attributes="src string:${portal_url}/hierarchylist.js"></script>
        <div tal:attributes="id python: 'hierarchylist_' + attr_name">
            <div class="container">
                <input type="hidden" name="zopra_attr_present:list"
                         tal:attributes="value attr_name" />
                <input type="hidden"
                         tal:attributes="value python:attr_value and attr_value[0] or 0; name python:attr_name+':list:int'; id attr_name" />
                <div tal:define = "hierarchy_list python:lobj.getHierarchyListAncestors( attr_value and attr_value[0] or 0);"
                         tal:repeat = "parent hierarchy_list">
                    <metal:block metal:use-macro="here/zopra_widget_edit_display/macros/widget_hierarchylist_select" />
                    <br/>
                </div>
            </div>
        </div>
    </tal:block>
</metal:widget_hierarchylist>

<tal:comment tal:replace="nothing">
    The next part is the macro building one block of the hierarchylist edit / search display.
    It is used by zopra_widget_edit_display, zopra_widget_search_display and zopra_widget_hierarchylist_helper (to get
    further levels of the list via ajax)
</tal:comment>

<metal:block define-macro="widget_hierarchylist_select">
    <tal:block tal:define="items python:lobj.getEntriesByParent(parent);
                           hierarchy_list hierarchy_list|python:[];"
               tal:condition="python:len(items)">
        <select class="single"
                name="hierarchylist_selection"
                tal:attributes="onchange string:hierarchylist_select_option('${attr_name}','${table}',this);;;">
            <option value="0" i18n:translate="zopra_widget_choose">-choose-</option>
            <tal:block tal:repeat="item items">
                <option tal:content="item/value"
                        tal:attributes="value item/autoid;
                                        selected python: item['autoid'] in hierarchy_list and 'selected' or nothing">
                    one option
                </option>
            </tal:block>
        </select>
    </tal:block>
</metal:block>
</body>
</html>

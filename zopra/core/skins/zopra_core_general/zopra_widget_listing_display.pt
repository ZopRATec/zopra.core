<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      i18n:domain="plone">

<body>
<tal:comment tal:replace="nothing">
- display widgets almost like zopra_widget_show_display, but optimized for the search result table (for display inside rows/cols)
</tal:comment>
<metal:widget_selector define-macro="widget_selector">
  <metal:block metal:use-macro="python:path('here/zopra_widget_listing_display/macros/widget_'+attr_type)" />
</metal:widget_selector>

<metal:widget_string define-macro="widget_string">
  <span tal:content="attr_value">value</span>
</metal:widget_string>

<metal:widget_int define-macro="widget_int">
  <span tal:content="attr_value">value</span>
</metal:widget_int>

<metal:widget_float define-macro="widget_float">
  <span tal:define="number python: str(attr_value).replace('.', ',');
                    number python: (len(number) > 2) and number[-2:] == ',0' and number[:-2] or number"
        tal:content="number">value</span>
</metal:widget_float>

<metal:widget_currency define-macro="widget_currency">
  <span tal:content="python: context.prepare_zopra_currency_value(attr_value)">value</span>
</metal:widget_currency>

<metal:widget_date define-macro="widget_date">
  <span tal:content="attr_value">value</span>
</metal:widget_date>

<metal:widget_bool define-macro="widget_bool">
  <input type="checkbox"
         disabled="disabled"
         tal:attributes="checked python:bool(attr_value) and attr_value != '0';"
    />
</metal:widget_bool>

<metal:widget_memo define-macro="widget_memo">
  <tal:block tal:define="attr_value python: here.prepareLinks(attr_value);
                         attr_value python: attr_value.replace('\n', '<br />');">
    <span tal:content="structure attr_value">value</span>
  </tal:block>
</metal:widget_memo>

<metal:widget_singlelist define-macro="widget_singlelist" tal:define="style widget_style | string:'line'">
  <tal:block tal:condition="python: style!='force_single'">
    <tal:block tal:define="lobj python:here.listHandler.getList(table, attr_name);
                           textvalue python:lobj.getValueByAutoid(attr_value, lang=lang);">
      <span tal:content="textvalue" />
    </tal:block>
  </tal:block>
  <tal:block tal:condition="python: style=='force_single'">
    <tal:block tal:define="lobj python:here.listHandler.getList(table, attr_name);
                           textvalue python:len(attr_value) > 0 and lobj.getValueByAutoid(attr_value[0], lang=lang) or '';">
      <span tal:content="textvalue" />
    </tal:block>
  </tal:block>
</metal:widget_singlelist>

<metal:widget_multilist define-macro="widget_multilist" tal:define="style widget_style | string:list; selnotes attr_notes|nothing">
  <tal:block tal:condition="python: style == 'list'">
    <ul tal:define="lobj python:here.listHandler.getList(table, attr_name);
                        notes python: lobj.notes;">
            <tal:block tal:repeat="onevalue attr_value">
                <li>
                    <span tal:content="python:lobj.getValueByAutoid(onevalue)">Value</span>
                    <tal:block tal:condition="python: notes and selnotes"
                               tal:define="notesname python: attr_name + 'notes' + str(onevalue);">
                        <tal:block tal:condition="python: isinstance(notes, (unicode, str))">
                            <span tal:define="notesobj python: notes and here.listHandler[notes];
                                              notesvalue python: notesobj.getValueByAutoid(selnotes.get(notesname));"
                                  tal:condition="notesvalue"
                                  tal:content="python: '(%s)' % notesvalue">
                                Notesvalue
                            </span>
                        </tal:block>
                        <tal:block tal:condition="python: isinstance(notes, bool) and selnotes.get(notesname)">
                            (<span tal:content="python: selnotes.get(notesname)">Textfeld</span>)
                        </tal:block>
                    </tal:block>
                </li>
            </tal:block>
    </ul>
  </tal:block>
  <tal:block tal:condition="python: style == 'line'">
    <span tal:define="lobj python:here.listHandler.getList(table, attr_name);
                      textvalues python:lobj.getValueByAutoid(attr_value, lang=lang);
                      concatenator concatenator|string:, ;
                      onestring python: isinstance(textvalues, (unicode, str)) and textvalues or concatenator.join(textvalues);"
          tal:content="onestring">
      Content
    </span>
  </tal:block>
</metal:widget_multilist>

<metal:widget_hierarchylist define-macro="widget_hierarchylist">
    <ul tal:define="lobj python:here.listHandler.getList(table, attr_name);">
        <li tal:repeat="onevalue attr_value">
            <tal:block tal:repeat="item_id python:lobj.getHierarchyListAncestors(onevalue)[1:]">
                <div tal:condition="python:item_id != 0">
                    <span tal:define="number repeat/item_id/index;
                                      indent python:'&nbsp;&nbsp;'*(number);"
                          tal:content="structure indent">
                    </span>
                    <span tal:content="python: '> ' + lobj.getValueByAutoid(item_id)">value</span>
                </div>
            </tal:block>
        </li>
    </ul>
</metal:widget_hierarchylist>

</body>
</html>
